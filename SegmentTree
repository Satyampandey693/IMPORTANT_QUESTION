#include<bits/stdc++.h>
using namespace std;

vector<int> arr(100001);
vector<int> segTree(400001);
void build(int ind,int low,int high){
    if(low==high){
        segTree[ind]=arr[low];
        return ;
    }
    int mid=(low+high)/2;
    build(2*ind+1,low,mid);
    build(2*ind+2,mid+1,high);
    segTree[ind]=max(segTree[2*ind+1],segTree[2*ind+2]);//we are storing max of 
    //left node and right node as this q is related to find maximum in range

}

int query(int ind,int low,int high,int l,int r){
    if(low>=l&&high<=r){
        return segTree[ind];
    }
    if(high<l||low>r){
        return INT_MIN;
    }
    int mid=(low+high)/2;
    int left=query(2*ind+1,low,mid,l,r);
    int right=query(2*ind+2,mid+1,high,l,r);
    return max(left,right);

}

int main(){
    int n;
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    // cout<<"J";
    build(0,0,n-1);
    int q;
    cin>>q;
    while(q--){
        int l,r;
        cin>>l>>r;
        cout<<query(0,0,n-1,l,r)<<endl;;
    }

}



